# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Configuración adicional para ML Kit y cámara
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      
      # Habilitar bitcode (requerido por algunos frameworks)
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # Optimización para ML Kit
      config.build_settings['SWIFT_VERSION'] = '5.0'

      # permission_handler: habilitar permisos requeridos mediante macros
      # Si estos macros no están presentes, iOS no compila las rutas de permiso y las solicitudes devuelven
      # "permanentlyDenied" sin mostrar el diálogo del sistema.
      existing_defs = config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] || ['$(inherited)']
      required_defs = [
        'PERMISSION_CAMERA=1',
        'PERMISSION_PHOTOS=1',
        # 'PERMISSION_PHOTOS_ADD_ONLY=1', # opcional si solo se agrega a la librería
      ]
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = (existing_defs + required_defs).uniq
    end
  end
end
